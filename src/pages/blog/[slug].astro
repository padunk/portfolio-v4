---
import Layout from '@/layouts/Layout.astro'
import type { Post } from '@/types'
import { PortableText } from 'astro-portabletext'
import { sanityClient } from 'sanity:client'
import Image from '@/portabletext/Image.astro'
import Title from '@/components/Title.astro'
import Code from '@/components/Code.astro'
import BlockQuote from '@/components/BlockQuote.astro'
import Paragraph from '@/components/Paragraph.astro'
import List from '@/components/List.astro'
import ListItem from '@/components/ListItem.astro'
import { Button } from '@/components/ui/button'

export async function getStaticPaths() {
  const posts = await sanityClient.fetch<Post[]>(
    `*[_type == "post" && defined(slug.current) && publishedAt < now()] | order(publishedAt desc){ slug }`
  )
  return posts.map((post) => ({
    params: {
      slug: post.slug.current,
    },
  }))
}

const { slug } = Astro.params
const filter = '*[_type == "post" && slug.current == $slug][0]'
const projection = `{
  ...,
  body[]{
    ...,
    children[]{
    ...,
    _type == 'authorReference' => {
      _type,
      author->
    }
    }
  },
      "authorList": authors[].author->name,
      "coverImage": {
          "alt": mainImage.alt,
          "caption": mainImage.caption,
          "url": mainImage.asset->url
      }
  }`

const query = filter + projection
const post = await sanityClient.fetch<Post, { slug: string }>(query, { slug })
// console.log('post :>> ', post)
const components = {
  type: {
    mainImage: Image,
    code: Code,
  },
  block: {
    blockquote: BlockQuote,
    h1: Title,
    h2: Title,
    normal: Paragraph,
  },
  list: {
    bullet: List,
    number: List,
  },
  listItem: {
    bullet: ListItem,
    number: ListItem,
  },
  mark: {
    code: Code,
  },
}
---

<Layout>
  <article>
    <div class='my-24'>
      <h1 class='text-3xl text-center capitalize'>
        {post.title}
      </h1>
    </div>
    <div class='max-w-prose'>
      <PortableText value={post.body} components={components} />
    </div>
  </article>
  <div>
    <Button id='go-back'>Back</Button>
  </div>
</Layout>

<script>
  document.getElementById('go-back')?.addEventListener('click', handleGoBack)

  function handleGoBack() {
    window.history.back()
  }
</script>
